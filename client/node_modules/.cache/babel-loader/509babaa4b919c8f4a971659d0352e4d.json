{"ast":null,"code":"//import {GENDER} from '../types/index.ts';\nconst regExpression = /^[a-zA-Z]{5,15}$/;\nconst emailRegExpression = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\nconst passwordRegExpression = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{10,20}$/;\nexport const checkName = name => {\n  return !name.match(regExpression) ? false : true;\n};\nexport const checkEmailaddress = email => {\n  return !email.match(emailRegExpression) ? false : true;\n};\nexport const checkUserPassword = userPassword => {\n  return !userPassword.match(passwordRegExpression) ? false : true;\n};\nexport const checkMatchPassword = (userConfirmedpassword, userPassword) => {\n  return userPassword == userConfirmedpassword ? false : true;\n};\nexport const checkGender = gender => {\n  return gender == \"male\" || gender == \"female\" || gender == \"other\" ? true : false;\n};","map":{"version":3,"names":["regExpression","emailRegExpression","passwordRegExpression","checkName","name","match","checkEmailaddress","email","checkUserPassword","userPassword","checkMatchPassword","userConfirmedpassword","checkGender","gender"],"sources":["/Applications/MAMP/htdocs/rbm/client/src/utilities/validation.ts"],"sourcesContent":["//import {GENDER} from '../types/index.ts';\nconst regExpression = /^[a-zA-Z]{5,15}$/;\nconst emailRegExpression = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\nconst passwordRegExpression = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{10,20}$/;\n\nexport const checkName = (name: string) : boolean => {\n    return (!name.match(regExpression)) ? false : true; \n}\n\nexport const checkEmailaddress = (email: string) : boolean => {\n    return (!email.match(emailRegExpression)) ? false : true; \n}\n  \nexport const checkUserPassword = (userPassword: string) : boolean => {\n    return (!userPassword.match(passwordRegExpression)) ? false : true; \n}\n\nexport const checkMatchPassword = (userConfirmedpassword: string,  userPassword: string ) : boolean => {\n    return (userPassword == userConfirmedpassword) ? false : true; \n}\n   \nexport const checkGender = (gender: string ) : boolean => {\n    return (gender == \"male\"|| gender == \"female\" || gender == \"other\") ? true : false; \n}\n   \n"],"mappings":"AAAA;AACA,MAAMA,aAAa,GAAG,kBAAtB;AACA,MAAMC,kBAAkB,GAAG,sHAA3B;AACA,MAAMC,qBAAqB,GAAG,0CAA9B;AAEA,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAA4B;EACjD,OAAQ,CAACA,IAAI,CAACC,KAAL,CAAWL,aAAX,CAAF,GAA+B,KAA/B,GAAuC,IAA9C;AACH,CAFM;AAIP,OAAO,MAAMM,iBAAiB,GAAIC,KAAD,IAA6B;EAC1D,OAAQ,CAACA,KAAK,CAACF,KAAN,CAAYJ,kBAAZ,CAAF,GAAqC,KAArC,GAA6C,IAApD;AACH,CAFM;AAIP,OAAO,MAAMO,iBAAiB,GAAIC,YAAD,IAAoC;EACjE,OAAQ,CAACA,YAAY,CAACJ,KAAb,CAAmBH,qBAAnB,CAAF,GAA+C,KAA/C,GAAuD,IAA9D;AACH,CAFM;AAIP,OAAO,MAAMQ,kBAAkB,GAAG,CAACC,qBAAD,EAAiCF,YAAjC,KAAqE;EACnG,OAAQA,YAAY,IAAIE,qBAAjB,GAA0C,KAA1C,GAAkD,IAAzD;AACH,CAFM;AAIP,OAAO,MAAMC,WAAW,GAAIC,MAAD,IAA+B;EACtD,OAAQA,MAAM,IAAI,MAAV,IAAmBA,MAAM,IAAI,QAA7B,IAAyCA,MAAM,IAAI,OAApD,GAA+D,IAA/D,GAAsE,KAA7E;AACH,CAFM"},"metadata":{},"sourceType":"module"}